@using Scribble.Web.Entities
@using Scribble.Web.Helpers
@model Scribble.Web.ViewModels.PostViewModel

@section Title {
    @Model.Title
}

@helper LinkedTag(Tag tag)
{
    @Html.ActionLink(tag.Name, "ByTag", new { tag.UrlName })
}

<article>
    @Html.Raw(Model.Body)
</article>

<section class="meta clearfix">
    <div class="date">
        <h4>Published</h4>
        <p>@Model.Date.ToString("dd MMMM yyyy")</p>
    </div>
    <div class="category">
        <h4>Category</h4>
        <p>@Html.ActionLink(Model.Category.Name, "ByCategory", new { Model.Category.UrlName })</p>
    </div>
    <div class="tags">
        <h4>Tagged</h4>
        <p>@Html.Raw(string.Join(", ", Model.Tags.Select(LinkedTag)))</p>
    </div>
</section>

<section class="comments">
    <h2>@(Model.Comments.Any() ? Model.Comments.Count().ToString() : "No") comments</h2>

    @foreach (var comment in Model.Comments)
    {
        <div>
            <h4>
                <cite>
                    @using (Html.WrapWithLink(comment.Website))
                    {
                        @comment.Name
                    }
                </cite>
                says:
            </h4>
            <p>@comment.Text</p>
        </div>
    }

    @*    @Html.Partial("AddComment", Model)*@
</section>